<%
p("databases.roles", []).each do |role|
	if role["password"].nil?
		missing_property = ''
		if p("databases.tls").nil?
			missing_property = 'databases.tls'
		elsif p("databases.tls.ca").to_s == ""
			missing_property = 'databases.tls.ca'
		elsif p("databases.tls.certificate").to_s == ""
			missing_property = 'databases.tls.certificate'
		elsif p("databases.tls.private_key").to_s == ""
			missing_property = 'databases.tls.private_key'
		end
		if missing_property != ''
			raise "Role #{role["name"]} defined without a password but '#{missing_property}' property is not present"
		end
	end
end
%>
# Control the available listen_addresses via
# deployment manifest - add networks to the job
#
# For example, to attach new networks:
#
# jobs:
# - name: uuadb
# - template: postgres
# - networks:
#   - name: apps
#     static_ips:
#     - 1.2.3.4
#   - name: management
#     static_ips:
#     - 9.8.7.6
listen_addresses = '0.0.0.0'
port = <%= p("databases.port") %>
max_connections = <%= p("databases.max_connections") %>
external_pid_file = '/var/vcap/sys/run/postgres/postgres.pid'
authentication_timeout = 1min

shared_buffers = 128MB
temp_buffers = 8MB

max_files_per_process = 1000

logging_collector = on
log_directory = '/var/vcap/sys/log/postgres'
log_filename = 'postgresql.log'
log_line_prefix = '<%= p("databases.log_line_prefix") %>'

datestyle = 'iso, mdy'

lc_messages = 'en_US.UTF-8'
lc_monetary = 'en_US.UTF-8'
lc_numeric = 'en_US.UTF-8'
lc_time = 'en_US.UTF-8'

default_text_search_config = 'pg_catalog.english'

<% if p("databases.collect_statement_statistics") %>
shared_preload_libraries = 'pg_stat_statements'
track_activity_query_size = 4096
pg_stat_statements.track = all
<% end %>

<% if p("databases.tls.certificate") != '' %>
ssl=on
  <% if p("databases.tls.ca") != '' %>
ssl_ca_file='/var/vcap/jobs/postgres/config/certificates/server.ca_cert'
  <% end %>
ssl_key_file='/var/vcap/jobs/postgres/config/certificates/server.private_key'
ssl_cert_file='/var/vcap/jobs/postgres/config/certificates/server.public_cert'
<% end %>

<% if_p("databases.additional_config") do |db_config| %>
# Additional configuration
<% db_config.each do |key, value| %>
<%= key %> = <%= value %>
<% end %>
<% end %>
